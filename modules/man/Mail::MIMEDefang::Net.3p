.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "modules::lib::Mail::MIMEDefang::Net 3p"
.TH modules::lib::Mail::MIMEDefang::Net 3p "2022-03-29" "2.86" "Mail::MIMEDefang::Net Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mail::MIMEDefang::Net \- Network related methods for email filters
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mail::MIMEDefang::Net are a set of methods that can be called
from \fImimedefang-filter\fR to call network related services.
.SH "METHODS"
.IX Header "METHODS"
.IP "expand_ipv6_address" 4
.IX Item "expand_ipv6_address"
Method that returns an IPv6 address with all zero fields explicitly expanded,
any field shorter than 4 hex digits will be padded with zeros.
.IP "reverse_ip_address_for_rbl" 4
.IX Item "reverse_ip_address_for_rbl"
Method that returns the ip address in the appropriately-reversed format used
for \s-1RBL\s0 lookups.
.IP "relay_is_blacklisted" 4
.IX Item "relay_is_blacklisted"
Method that returns the result of the lookup (eg 127.0.0.2).
Parameters are the ip address of the relay host and the domain of the
rbl server.
.ie n .IP "is_public_ip4_address $ip_addr" 4
.el .IP "is_public_ip4_address \f(CW$ip_addr\fR" 4
.IX Item "is_public_ip4_address $ip_addr"
Returns true if \f(CW$ip_addr\fR is a publicly-routable IPv4 address, false otherwise
.ie n .IP "get_mx_ip_addresses $domain [$resolver_object]" 4
.el .IP "get_mx_ip_addresses \f(CW$domain\fR [$resolver_object]" 4
.IX Item "get_mx_ip_addresses $domain [$resolver_object]"
Get \s-1IP\s0 addresses of all \s-1MX\s0 hosts for given domain.  If there are
no \s-1MX\s0 hosts, then return A records.
.ie n .IP "md_get_bogus_mx_hosts $domain" 4
.el .IP "md_get_bogus_mx_hosts \f(CW$domain\fR" 4
.IX Item "md_get_bogus_mx_hosts $domain"
Returns a list of \*(L"bogus\*(R" \s-1IP\s0 addresses that are in \f(CW$domain\fR's list of \s-1MX\s0
records.  A \*(L"bogus\*(R" \s-1IP\s0 address is loopback/private/multicast/etc.
.IP "relay_is_blacklisted_multi" 4
.IX Item "relay_is_blacklisted_multi"
Method that rerurns a hash table with one entry per original domain.
Entries in hash will be:
\&\f(CW\*(C`{ $domain =<gt\*(C'\fR \f(CW$return\fR }>, where \f(CW$return\fR is one of \s-1SERVFAIL, NXDOMAIN\s0 or
a list of \s-1IP\s0 addresses as a dotted-quad.
.IP "relay_is_blacklisted_multi_count" 4
.IX Item "relay_is_blacklisted_multi_count"
Method that returns a number indicating how many RBLs the host
was blacklisted in.
.IP "relay_is_blacklisted_multi_list" 4
.IX Item "relay_is_blacklisted_multi_list"
Method that returns an array indicating the domains in which
the relay is blacklisted.
